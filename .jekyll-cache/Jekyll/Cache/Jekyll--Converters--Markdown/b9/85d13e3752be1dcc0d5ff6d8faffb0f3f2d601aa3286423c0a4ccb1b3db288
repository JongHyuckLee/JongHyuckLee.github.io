I"S<h1 id="sveltejs-알아보기">Svelte.js 알아보기</h1>
<pre class="info-panel">
 - 2021년 가장 사랑받는 웹 프레임워크
 - 늘 그래왔듯이 React와 Vue가 선두를 달리고 있지만, Svelte는 빠르게 선두 자리를 차지하기 위한 매우 진지한 경쟁자로 자리매김하고 있습니다.
 - 점점 점유율을 높여가며 성장하는 프레임워크인 Svelte.js에 대해 알아보도록 하겠습니다.
 - 이 포스트의 모든 코드는 https://github.com/JongHyuckLee/svelte-study 를 기반으로 합니다.
</pre>

<h2 id="1-sveltejs의-장점">1. Svelte.js의 장점</h2>
<h4 id="1-적은-러닝-커브">1. 적은 러닝 커브</h4>
<ul>
  <li>이미 알고 있는 vanilla js, HTML, css를 통해 작성 가능.</li>
</ul>

<figure class="highlight"><pre><code class="language-html" data-lang="html"># App.svelte
<span class="nt">&lt;script&gt;</span>
	<span class="k">export</span> <span class="kd">let</span> <span class="nx">name</span><span class="p">;</span>
<span class="nt">&lt;/script&gt;</span>

<span class="nt">&lt;main&gt;</span>
	<span class="nt">&lt;h1&gt;</span>Hello {name}!<span class="nt">&lt;/h1&gt;</span>
	<span class="nt">&lt;p&gt;</span>Visit the <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"https://svelte.dev/tutorial"</span><span class="nt">&gt;</span>Svelte tutorial<span class="nt">&lt;/a&gt;</span> to learn how to build Svelte apps.<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;/main&gt;</span>

<span class="nt">&lt;style&gt;</span>
	<span class="nt">main</span> <span class="p">{</span>
		<span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
		<span class="nl">padding</span><span class="p">:</span> <span class="m">1em</span><span class="p">;</span>
		<span class="nl">max-width</span><span class="p">:</span> <span class="m">240px</span><span class="p">;</span>
		<span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="nb">auto</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nt">h1</span> <span class="p">{</span>
		<span class="nl">color</span><span class="p">:</span> <span class="m">#ff3e00</span><span class="p">;</span>
		<span class="nl">text-transform</span><span class="p">:</span> <span class="nb">uppercase</span><span class="p">;</span>
		<span class="nl">font-size</span><span class="p">:</span> <span class="m">4em</span><span class="p">;</span>
		<span class="nl">font-weight</span><span class="p">:</span> <span class="m">100</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">@media</span> <span class="p">(</span><span class="n">min-width</span><span class="p">:</span> <span class="m">640px</span><span class="p">)</span> <span class="p">{</span>
		<span class="nt">main</span> <span class="p">{</span>
			<span class="nl">max-width</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="nt">&lt;/style&gt;</span></code></pre></figure>

<h4 id="2-코드량-감소">2. 코드량 감소</h4>
<ul>
  <li>React.js나 Vue.js에 비해 보일러플레이트 코드가 작음.</li>
</ul>

<figure class="highlight"><pre><code class="language-react" data-lang="react"><span class="c1">// React</span>

<span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">Index</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="p">[</span><span class="nx">name</span><span class="p">]</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">useState</span><span class="p">(</span><span class="dl">'</span><span class="s1">React</span><span class="dl">'</span><span class="p">);</span>

    <span class="k">return</span> <span class="p">(</span>
        <span class="p">&lt;</span><span class="nt">main</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">style</span><span class="p">=&gt;</span>Hello <span class="si">{</span><span class="nx">name</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Visit the <span class="si">{</span><span class="nx">name</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
    <span class="p">)</span>

<span class="p">}</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-vue" data-lang="vue">// Vue.js
<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">data</span><span class="p">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Vue</span><span class="dl">'</span><span class="p">,</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;main&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Hello <span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>Visit the !!.<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/main&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Svelte</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
	<span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Svelte</span><span class="dl">'</span><span class="p">;</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">main</span><span class="o">&gt;</span>
	<span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="p">{</span><span class="nx">name</span><span class="p">}</span><span class="o">!&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span>	<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">Visit</span> <span class="nx">the</span> <span class="nx">Svelte</span><span class="o">!!&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/main&gt;</span></code></pre></figure>

<h4 id="3-virtual-dom을-사용하지-않음">3. Virtual Dom을 사용하지 않음.</h4>
<ul>
  <li>React, Vue의 경우 virtual dom을 통해 메모리에 계산된 마지막 dom tree를 현재의 dom과 <code class="language-plaintext highlighter-rouge">비교</code>하여 적용합니다.</li>
  <li>virtual dom을 사용하는 측에서는 이는 real dom에서 re-paint, re-flow가 일어나는 것에 비하면 훨씬 나은 오버헤드가 적용된다고 하지만, virtual-dom과 real-dom사이를 비교 &amp; 적용하는 것은 적지 않은 오버헤드가 발생합니다.</li>
  <li>Framework 경량화를 통해 프론트를 더 빠르게 시작하고 유지할 수 있습니다.</li>
  <li>svelte 공식 문서에서는 어떤 부분이 변화할지 안다고 기술 되어있습니다. svelte에서 관리하는 state를 바탕으로 Observable pattern을 통해 변화된 부분만 리렌더링하는 것으로 보입니다.</li>
</ul>

<h4 id="4-reactive">4. Reactive</h4>
<ul>
  <li>React, Vue와 같이 데이터 변경에 따른 화면 구성을 합니다.</li>
  <li>즉, 상태 관리에 따른 반응형 화면을 구성합니다.</li>
</ul>

<h2 id="2-설치하기">2. 설치하기</h2>
<pre class="info-panel">
 - 아래의 설명 예제는 기본 svelte 설치 script입니다.
 - react의 create-react-app과 같은 역할입니다.
 - 하지만 제가 작성한 example code는 svelte, react, vue의 차이점을 보여주기 위해 webpack 설정을 직접 구성했습니다.
</pre>
<ul>
  <li>bundling tool : roll up</li>
</ul>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell">// sveltejs/template으로 svelte 환경을 구성하면 bundle tool이 roll up으로 설치됩니다.
npx degit sveltejs/template my-svelte-project

npm <span class="nb">install
</span>npm run dev</code></pre></figure>

<ul>
  <li>bundling tool : webpack</li>
</ul>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell">npx degit sveltejs/template-webpack my-svelte-project

npm <span class="nb">install
</span>npm run dev</code></pre></figure>

<h2 id="3-파일-구성">3. 파일 구성</h2>
<ul>
  <li>React의 경우 html 코드를 jsx(js code)로 작성하는 만큼, .jsx의 내부는 js 코드로 모든 파일이 이루어져 있습니다.
    <ul>
      <li>html : jsx(js) 내부에 html 태그 작성, 스코프 내의 선언된 변수 및 함수, global 객체에 접근할 수 있습니다.</li>
      <li>js 코드 : class based component 또는 function based component에서 모두 스코프 내부에 변수 및 함수 코드를 작성.</li>
      <li>style을 import하거나 inline-style을 이용합니다.</li>
      <li>style-component, sass 등을 이용할 수도 있습니다.</li>
    </ul>
  </li>
  <li>Vue의 경우 <template></template>, <script></script>, <style></style>의 세개의 섹션으로 영역이 구성됩니다.
    <ul>
      <li>html : <template></template> 내부에 html tag로 작성.
        <ul>
          <li>directive 혹은 지시어를 통해 Vue instance 내부의 속성을 사용할 수 있습니다.</li>
          <li>directive를 통해 조건문, 제어문을 사용.</li>
          <li>Vue instance가 아닌 global 객체에 접근할 수 없습니다.</li>
        </ul>
      </li>
      <li>js 코드 : <script></script> 내부 Vue instance 내부에 관련 코드 작성.</li>
      <li>style : 지역 style의 경우 <style></style> 태그 내부에 작성.</li>
    </ul>
  </li>
  <li>Svelte의 경우 html tag, <script></script>, <style></style>의 영역으로 구성됩니다.
    <ul>
      <li>html: wrapper html 태그를 이용해 html 작성
        <ul>
          <li>ex) &lt;div&gt;…&lt;/div&gt; , &lt;main&gt;&lt;/main&gt;</li>
          <li>template 내부 약속어를 통해 조건문, 제어문을 사용.</li>
          <li>html 태그내에서 <script></script>에서 정의된 변수, 함수, 글로벌 객체에 접근 가능.</li>
        </ul>
      </li>
      <li>js 코드: <script></script> 태그내에서 vanillaJs와 같이 변수 &amp; 함수 초기화</li>
      <li>style : 지역 style의 경우 &lt;style&lt;/style&gt; 태그내에서 사용.</li>
    </ul>
  </li>
</ul>

<figure class="highlight"><pre><code class="language-react" data-lang="react"><span class="c1">//React</span>
<span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">Index</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="p">[</span><span class="nx">name</span><span class="p">]</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">useState</span><span class="p">(</span><span class="dl">'</span><span class="s1">React</span><span class="dl">'</span><span class="p">);</span>

    <span class="k">return</span> <span class="p">(</span>
        <span class="p">&lt;</span><span class="nt">main</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">style</span><span class="p">=&gt;</span>Hello <span class="si">{</span><span class="nx">name</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Visit the <span class="si">{</span><span class="nx">name</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
    <span class="p">)</span>

<span class="p">}</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-vue" data-lang="vue">//Vue
<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">data</span><span class="p">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Vue</span><span class="dl">'</span><span class="p">,</span>
    <span class="p">}</span>
  <span class="p">},</span>
  <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
   
  <span class="p">}</span>
<span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;main&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Hello <span class="nt">&lt;/h1&gt;</span>
<span class="c">&lt;!--    </span><span class="nt">&lt;p</span> <span class="err">@</span><span class="na">click=</span><span class="s">"()=&gt;console.log('click Vue')"</span><span class="nt">&gt;</span>Visit the !!.<span class="nt">&lt;/p&gt;</span> Vue instance 외부 global에 접근할 수 없음.--&gt;
    <span class="nt">&lt;p&gt;</span>Visit the !!.<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/main&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">style</span><span class="nt">&gt;</span>
<span class="nt">main</span> <span class="p">{</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1em</span><span class="p">;</span>
  <span class="nl">max-width</span><span class="p">:</span> <span class="m">240px</span><span class="p">;</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="nb">auto</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">h1</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#47C83E</span><span class="p">;</span>
  <span class="nl">text-transform</span><span class="p">:</span> <span class="nb">uppercase</span><span class="p">;</span>
  <span class="nl">font-size</span><span class="p">:</span> <span class="m">4em</span><span class="p">;</span>
  <span class="nl">font-weight</span><span class="p">:</span> <span class="m">100</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">input</span> <span class="p">{</span>
  <span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
  <span class="nl">margin-top</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">@media</span> <span class="p">(</span><span class="n">min-width</span><span class="p">:</span> <span class="m">640px</span><span class="p">)</span> <span class="p">{</span>
  <span class="nt">main</span> <span class="p">{</span>
    <span class="nl">max-width</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">style</span><span class="nt">&gt;</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
	<span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Svelte</span><span class="dl">'</span><span class="p">;</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">main</span><span class="o">&gt;</span>
	<span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="p">{</span><span class="nx">name</span><span class="p">}</span><span class="o">!&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span>	<span class="o">&lt;</span><span class="nx">p</span> <span class="nx">on</span><span class="p">:</span><span class="nx">click</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">click Svelte</span><span class="dl">"</span><span class="p">)}</span><span class="o">&gt;</span><span class="nx">Visit</span> <span class="nx">the</span> <span class="nx">Svelte</span><span class="o">!!&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/main</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">style</span><span class="o">&gt;</span>
	<span class="nx">main</span> <span class="p">{</span>
		<span class="nx">text</span><span class="o">-</span><span class="nx">align</span><span class="p">:</span> <span class="nx">center</span><span class="p">;</span>
		<span class="nl">padding</span><span class="p">:</span> <span class="mi">1</span><span class="nx">em</span><span class="p">;</span>
		<span class="nx">max</span><span class="o">-</span><span class="nx">width</span><span class="p">:</span> <span class="mi">240</span><span class="nx">px</span><span class="p">;</span>
		<span class="nl">margin</span><span class="p">:</span> <span class="mi">0</span> <span class="nx">auto</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">h1</span> <span class="p">{</span>
		<span class="nl">color</span><span class="p">:</span> <span class="err">#</span><span class="nx">ff3e00</span><span class="p">;</span>
		<span class="nx">text</span><span class="o">-</span><span class="nx">transform</span><span class="p">:</span> <span class="nx">uppercase</span><span class="p">;</span>
		<span class="nx">font</span><span class="o">-</span><span class="nx">size</span><span class="p">:</span> <span class="mi">4</span><span class="nx">em</span><span class="p">;</span>
		<span class="nx">font</span><span class="o">-</span><span class="nx">weight</span><span class="p">:</span> <span class="mi">100</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="nx">input</span> <span class="p">{</span>
		<span class="nx">margin</span><span class="o">-</span><span class="nx">bottom</span><span class="p">:</span> <span class="mi">10</span><span class="nx">px</span><span class="p">;</span>
		<span class="nx">margin</span><span class="o">-</span><span class="nx">top</span><span class="p">:</span> <span class="mi">20</span><span class="nx">px</span><span class="p">;</span>
	<span class="p">}</span>


	<span class="p">@</span><span class="nd">media</span> <span class="p">(</span><span class="nx">min</span><span class="o">-</span><span class="nx">width</span><span class="p">:</span> <span class="mi">640</span><span class="nx">px</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">main</span> <span class="p">{</span>
			<span class="nx">max</span><span class="o">-</span><span class="nx">width</span><span class="p">:</span> <span class="nx">none</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/style&gt;</span></code></pre></figure>

<pre class="source">
출처 :
 - https://2020.stateofjs.com/ko-KR/technologies/front-end-frameworks/
 - https://velog.io/@katanazero86/svelte-life-cycle-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0
git example :
 - https://github.com/JongHyuckLee/svelte-study
 
</pre>
:ET